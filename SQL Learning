SQL commands are instructions used to communicate with the database.
SQL can perform specific taks like create a table, add data to tables, drop the table, modify the table, set permission for users.

There are five types of SQL commands: DDL, DML, DCL, TCL, and DQL.

Data Definition Language (DDL)
CREATE 
ALTER 
DROP
TRUNCATE

Data Manipulation Language (DML)
INSERT
UPDATE
DELETE

Data Control Language (DCL)
GRANT
REVOKE

Transaction Control Language (TCL)
COMMIT
ROLLBACK
SAVEPOINT

Data Query Language (DQL)
SELECT

create database Chinmay; -- Created a database with name as Chinmay
show databases; 
Data Definition Language (DDL):
CREATE 
It is used to create a new table in the database.
Syntax:
1. CREATE TABLE TABLE_NAME (COLUMN_NAME DATATYPES[,....]); 
Example:
1. CREATE TABLE EMPLOYEE(Name VARCHAR2(20), Email VARCHAR2(100), DOB DATE); 

b. DROP:
 It is used to delete both the structure and record stored in the table.
Syntax
1. DROP TABLE ; 
Example
1. DROP TABLE EMPLOYEE; 

c.ALTER:
 It is used to alter the structure of the database. This change could be either to modify the characteristics of an existing 
attribute or probably to add a new attribute.
Syntax:
To add a new column in the table
1. ALTER TABLE table_name ADD column_name COLUMN-definition; 
To modify existing column in the table:
1. ALTER TABLE MODIFY(COLUMN DEFINITION....); 
EXAMPLE
1. ALTER TABLE STU_DETAILS ADD(ADDRESS VARCHAR2(20)); 
2. ALTER TABLE STU_DETAILS MODIFY (NAME VARCHAR2(20)); 

d. TRUNCATE:
It is used to delete all the rows from the table and free the space containing the table.
Syntax:
1. TRUNCATE TABLE table_name; 
Example:
1. TRUNCATE TABLE EMPLOYEE;

Creating the CUSTOMERS TABLE

CREATE TABLE CUSTOMERS(
 ID INT NOT NULL,
 NAME VARCHAR (20) NOT NULL,
 AGE INT NOT NULL,
 ADDRESS CHAR (25) ,
 SALARY DECIMAL (18, 2), 
 PRIMARY KEY (ID)
);


--INSERT THE DATA INTO CUSTOMERS
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) VALUES (1, 'Ramesh', 32, 'Ahmedabad', 2000.00 );
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) VALUES (2, 'Khilan', 25, 'Delhi', 1500.00 );
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) VALUES (3, 'kaushik', 23, 'Kota', 2000.00 );
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) VALUES (4, 'Chaitali', 25, 'Mumbai', 6500.00 );
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) VALUES (5, 'Hardik', 27, 'Bhopal', 8500.00 );
INSERT INTO CUSTOMERS (ID,NAME,AGE,ADDRESS,SALARY) VALUES (6, 'Komal', 22, 'MP', 4500.00 );

UPDATE :
UPDATE CUSTOMERS SET ADDRESS='Banglore' where ID=6;

DELETE :
DELETE FROM CUSTOMERS WHERE ID=6;

-- LIKE(%)
FIND THE CUSTOMERS WITH SALARY STARTING WITH 200
SELECT * FROM CUSTOMERS WHERE SALARY LIKE '200%';

FIND THE CUSTOMERS WITH SALARY AS 200 AT ANY POSITION
SELECT * FROM CUSTOMERS WHERE SALARY LIKE '%200%';

Finds any values that start with 2 and are at least 3 characters in length.
SELECT * FROM CUSTOMERS WHERE SALARY LIKE '2__%';

Find the Salary values that end with 2
SELECT * FROM CUSTOMERS where SALARY LIKE '%2'

Finds any values that have a 2 in the second position and end with a 3.
SELECT * FROM CUSTOMERS where SALARY LIKE '_2%3';

Finds any values in a five-digit number that start with 2 and end with 3.
SELECT * FROM CUSTOMERS where SALARY LIKE '2___3';

Fetch the first 3 records of the table
SELECT * FROM CUSTOMERS LIMIT 3;

ORDER BY:


SELECT * FROM CUSTOMERS ORDER BY salary;

2	Khilan	 25	Delhi	    1500.00
1	Ramesh	 32	Ahmedabad	2000.00
3	kaushik	 23	Kota	    2000.00
4	Chaitali 25	Mumbai	    6500.00
5	Hardik	 27	Bhopal	    8500.00
7	Muffy	 24	Indore	   10000.00
				
SELECT * FROM CUSTOMERS ORDER BY SALARY,NAME;

2	Khilan	 25	Delhi	   1500.00
3	kaushik	 23	Kota	   2000.00
1	Ramesh	 32	Ahmedabad  2000.00
4	Chaitali 25	Mumbai	   6500.00
5	Hardik	 27	Bhopal	   8500.00
7	Muffy	 24	Indore	  10000.00


